<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">
    <!-- setup mybatis integration -->
    <!-- 1.set up database relevant properties：${url} -->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!-- 2.database connection pool-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- set connection properties -->
        <property name="driverClass" value="${jdbc.driver}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="user" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <!-- c3p0 private properties -->
        <property name="maxPoolSize" value="30" />
        <property name="minPoolSize" value="10" />
        <property name="initialPoolSize" value="10"/>
        <!-- non auto commit after closing connection-->
        <property name="autoCommitOnClose" value="false" />
        <!-- get the overtime -->
        <property name="checkoutTimeout" value="10000" />
        <!-- retry attempts -->
        <property name="acquireRetryAttempts" value="2" />
    </bean>

    <!-- 3.set SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- inject database connection pool -->
        <property name="dataSource" ref="dataSource" />
        <!-- set MyBaties global setting file:mybatis-config.xml -->
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <!-- scan entity package use alias-->
        <property name="typeAliasesPackage" value="com.science.entity" />
        <!-- scan sql setting file:mapper -->
        <property name="mapperLocations" value="classpath:mapper/*.xml" />
    </bean>

    <!-- 4.set Dao interface package，dynamically implement Dao interfaces,inject
    spring container -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- inject sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        <!-- give Dao package that needs to be scanned -->
        <property name="basePackage" value="com.science.o2o.dao" />
    </bean>
</beans>